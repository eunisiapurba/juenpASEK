package org.example;

public interface Storage {
    void insertMahasiswa(Mahasiswa mhs);
    Mahasiswa getMahasiswa(String nim);
    void updateMahasiswa(String nim, Mahasiswa mhs);
    void deleteMahasiswa(String nim);
}[5/3 18.02] Rike Vaneo Noviansita: package org.example;

public class RegistorMahasiswa {
    private Storage storage;

    public RegistorMahasiswa(Storage storage) {
        this.storage = storage;
    }

    public void registerMahasiswaBaru(Mahasiswa newMhs) {
        storage.insertMahasiswa(newMhs);
    }

    public void printInformasiMahasiswa(String nim) {
        Mahasiswa mhs = storage.getMahasiswa(nim);
        if (mhs != null) {
            System.out.println("NIM   : " + mhs.getNim());
            System.out.println("Nama  : " + mhs.getName());
            System.out.println("Prodi : " + mhs.getProdi());
        } else {
            System.out.println("Mahasiswa dengan NIM "+nim+" tidak ditemukan.");
        }
    }
[5/3 18.02] Rike Vaneo Noviansita: package org.example;

public class Main {
    public static void main(String[] args) {
        Storage arr = new ArrayListStorage();
        Storage hm = new HashMapStrorage();

        // testing arrayListStorage
        testing(arr);
        // testing hashMapStorage
        testing(hm);
    }

    public static void testing(Storage storage) {
        Mahasiswa mhs = new Mahasiswa("Gian", "71210689", "Informatika");
        Mahasiswa mhs2 = new Mahasiswa("Yandex", "71210683", "Informatika");
        RegistorMahasiswa rm = new RegistorMahasiswa(storage);
        System.out.println("=== TES INSERT dan DUPLIKASI ===");
        rm.registerMahasiswaBaru(mhs);
        rm.registerMahasiswaBaru(mhs2);
        rm.registerMahasiswaBaru(mhs2);
        System.out.println("");
        rm.printInformasiMahasiswa(mhs.getNim());
        System.out.println();
        rm.printInformasiMahasiswa(mhs2.getNim());

        System.out.println();
        System.out.println("=== TES UPDATE ===");
        rm.updateMahasiswa("71210683", "Yandi", "Informatika");
        rm.updateMahasiswa("71210690", "Yandi", "Informatika");
        System.out.println("");
        rm.printInformasiMahasiswa(mhs.getNim());
        System.out.println();
        rm.printInformasiMahasiswa(mhs2.getNim());

        System.out.println();
        System.out.println("=== TES DELETE ===");
        rm.deleteMahasiswa("71210683");
        rm.printInformasiMahasiswa("71210683");
    }
}
[5/3 18.03] Rike Vaneo Noviansita: package org.example;

public class Mahasiswa {
    private String name;
    private String nim;
    private String prodi;

    public Mahasiswa(String name, String nim, String prodi) {
        this.name = name;
        this.nim = nim;
        this.prodi = prodi;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getNim() {
        return nim;
    }

    public void setNim(String nim) {
        this.nim = nim;
    }

    public String getProdi() {
        return prodi;
    }

    public void setProdi(String prodi) {
        this.prodi = prodi;
    }
}
[5/3 18.03] Rike Vaneo Noviansita: package org.example;

import java.util.HashMap;

public class HashMapStrorage implements Storage {
    private HashMap<String, Mahasiswa> container = new HashMap<>();

    @Override
    public void insertMahasiswa(Mahasiswa mhs) {
        if (container.containsKey(mhs.getNim())) {
            System.out.println("Gagal Insert! NIM "+mhs.getNim()+" sudah ada!");
        } else {
            container.put(mhs.getNim(), mhs);
            System.out.println("Berhasil mendaftarkan mahasiswa: "+mhs.getNim()+" "+mhs.getName());
        }
    }

    @Override
    public Mahasiswa getMahasiswa(String nim) {
        return container.getOrDefault(nim, null);
    }

    @Override
    public void updateMahasiswa(String nim, Mahasiswa newMhs) {
        if (container.containsKey(nim)) {
            container.put(nim, newMhs);
            System.out.println("Berhasil update mahasiswa: "+ newMhs.getNim()+" "+newMhs.getName());
        } else {
            System.out.println("Mahasiswa dengan NIM "+newMhs.getNim()+" tidak ditemukan.");
        }
    }

    @Override
    public void deleteMahasiswa(String nim) {
        
        if (container.containsKey(nim)) {
            container.remove(nim);
            System.out.println("Berhasil hapus mahasiswa: "+nim);
        } else {
            System.out.println("Mahasiswa dengan NIM "+nim+" tidak ditemukan.");
        }
    }
}
[5/3 18.03] Rike Vaneo Noviansita: package org.example;

import java.util.ArrayList;

import java.util.ArrayList;

public class ArrayListStorage implements Storage {
    private ArrayList<Mahasiswa> container = new ArrayList<>();

    @Override
    public void insertMahasiswa(Mahasiswa mhs) {
        for (Mahasiswa mahasiswa : container) {
            if (mahasiswa.getNim().equals(mhs.getNim())) {
                System.out.println("Gagal, NIM sudah terdaftar.");
                return;
            }
        }
        container.add(mhs);
        System.out.println("Berhasil menambahkan mahasiswa.");
    }

    @Override
    public Mahasiswa getMahasiswa(String nim) {
        for (Mahasiswa mahasiswa : container) {
            if (mahasiswa.getNim().equals(nim)) {
                return mahasiswa;
            }
        }
        return null;
    }

    @Override
    public void updateMahasiswa(String nim, Mahasiswa newMhs) {
        for (int i = 0; i < container.size(); i++) {
            if (container.get(i).getNim().equals(nim)) {
                container.set(i, newMhs);
                System.out.println("Berhasil mengupdate mahasiswa.");
                return;
            }
        }
        System.out.println("Mahasiswa tidak ditemukan.");
    }

    @Override
    public void deleteMahasiswa(String nim) {
        for (int i = 0; i < container.size(); i++) {
            if (container.get(i).getNim().equals(nim)) {
                container.remove(i);
                System.out.println("Berhasil menghapus mahasiswa.");
                return;
            }
        }
        System.out.println("Mahasiswa tidak ditemukan.");
    }
}
