package org.example;

import java.util.ArrayList;

public class ArrayListStorage implements Storage {
    private ArrayList<Mahasiswa> container = new ArrayList<>();

    @Override
    public void insertMahasiswa(Mahasiswa mhs) {
        for (Mahasiswa existingMhs : container) {
            if (existingMhs.getNim().equals(mhs.getNim())) {
                System.out.println("Gagal Insert! NIM " + mhs.getNim() + " sudah ada!");
                return;
            }
        }
        container.add(mhs);
        System.out.println("Berhasil mendaftarkan mahasiswa: " + mhs.getNim() + " " + mhs.getNama());
    }

    @Override
    public Mahasiswa getMahasiswa(String nim) {
        for (Mahasiswa mhs : container) {
            if (mhs.getNim().equals(nim)) {
                return mhs;
            }
        }
        return null;
    }

    @Override
    public void updateMahasiswa(String nim, Mahasiswa mhs) {
        for (int i = 0; i < container.size(); i++) {
            if (container.get(i).getNim().equals(nim)) {
                container.set(i, mhs);
                System.out.println("Berhasil update Mahasiswa: " + mhs.getNim() + " " + mhs.getNama());
                return;
            }
        }
        System.out.println("Mahasiswa dengan NIM " + nim + " tidak ditemukan");
    }

    @Override
    public void deleteMahasiswa(String nim) {
        for (int i = 0; i < container.size(); i++) {
            if (container.get(i).getNim().equals(nim)) {
                Mahasiswa deletedMhs = container.remove(i);
                System.out.println("Berhasil Hapus Mahasiswa: " + deletedMhs.getNim() + " " + deletedMhs.getNama());
                return;
            }
        }
        System.out.println("Mahasiswa dengan NIM " + nim + " tidak ditemukan");
    }
}
