https://github.com/eunisiapurba/juenpASEK.git

package org.example;

public class Mahasiswa {
    private String nama;
    private String nim;
    private String prodi;

    public Mahasiswa(String nama, String nim, String prodi) {
        this.nama = nama;
        this.nim = nim;
        this.prodi = prodi;
    }

    public String getNama() {
        return nama;
    }

    public String getNim() {
        return nim;
    }

    public String getProdi() {
        return prodi;
    }

    public void setNama(String nama) {
        this.nama = nama;
    }

    public void setProdi(String prodi) {
        this.prodi = prodi;
    }

    @Override
    public String toString() {
        return "NIM    : " + nim + "\nNama   : " + nama + "\nProdi  : " + prodi;
    }
}
package org.example;

public interface Storage {
    void masukkanMahasiswa(Mahasiswa mhs);
    Mahasiswa getMahasiswa(String nim);
    void updateMahasiswa(String nim, Mahasiswa mhs);
    void hapusMahasiswa(String nim);
}
package org.example;

import java.util.ArrayList;

public class ArrayListStorage implements Storage {
    private ArrayList<Mahasiswa> container = new ArrayList<>();

    @Override
    public void masukkanMahasiswa(Mahasiswa mhs) {
        for (Mahasiswa mahasiswa : container) {
            if (mahasiswa.getNim().equals(mhs.getNim())) {
                System.out.println("Gagal Insert! NIM " + mhs.getNim() + " sudah ada.");
                return;
            }
        }
        container.add(mhs);
        System.out.println("Berhasil mendaftarkan mahasiswa: " + mhs.getNim());
    }

    @Override
    public Mahasiswa getMahasiswa(String nim) {
        for (Mahasiswa mahasiswa : container) {
            if (mahasiswa.getNim().equals(nim)) {
                return mahasiswa;
            }
        }
        return null;
    }

    @Override
    public void updateMahasiswa(String nim, Mahasiswa mhs) {
        for (Mahasiswa mahasiswa : container) {
            if (mahasiswa.getNim().equals(nim)) {
                mahasiswa.setNama(mhs.getNama());
                mahasiswa.setProdi(mhs.getProdi());
                System.out.println("Berhasil update Mahasiswa: " + nim);
                return;
            }
        }
        System.out.println("Mahasiswa dengan NIM " + nim + " tidak ditemukan.");
    }

    @Override
    public void hapusMahasiswa(String nim) {
        container.removeIf(mahasiswa -> mahasiswa.getNim().equals(nim));
        System.out.println("Berhasil Hapus Mahasiswa: " + nim);
    }
}

package org.example;

import java.util.HashMap;

public class HashMapStorage implements Storage {
    private HashMap<String, Mahasiswa> container = new HashMap<>();

    @Override
    public void masukkanMahasiswa(Mahasiswa mhs) {
        if (container.containsKey(mhs.getNim())) {
            System.out.println("Gagal Insert! NIM " + mhs.getNim() + " sudah ada.");
            return;
        }
        container.put(mhs.getNim(), mhs);
        System.out.println("Berhasil mendaftarkan mahasiswa: " + mhs.getNim());
    }

    @Override
    public Mahasiswa getMahasiswa(String nim) {
        return container.getOrDefault(nim, null);
    }

    @Override
    public void updateMahasiswa(String nim, Mahasiswa mhs) {
        if (container.containsKey(nim)) {
            container.put(nim, mhs);
            System.out.println("Berhasil update Mahasiswa: " + nim);
        } else {
            System.out.println("Mahasiswa dengan NIM " + nim + " tidak ditemukan.");
        }
    }

    @Override
    public void hapusMahasiswa(String nim) {
        container.remove(nim);
        System.out.println("Berhasil Hapus Mahasiswa: " + nim);
    }
}

package org.example;

public class RegistorMahasiswa {
    private Storage storage;

    public RegistorMahasiswa(Storage storage) {
        this.storage = storage;
    }

    public void registerMahasiswaBaru(Mahasiswa newMhs) {
        storage.masukkanMahasiswa(newMhs);
    }

    public void printInformasiMahasiswa(String nim) {
        Mahasiswa mhs = storage.getMahasiswa(nim);
        if (mhs != null) {
            System.out.println(mhs);
        } else {
            System.out.println("Mahasiswa dengan NIM " + nim + " tidak ditemukan.");
        }
    }

    public void updateMahasiswa(String nim, String name, String prodi) {
        Mahasiswa mhs = new Mahasiswa(name, nim, prodi);
        storage.updateMahasiswa(nim, mhs);
    }

    public void deleteMahasiswa(String nim) {
        storage.hapusMahasiswa(nim);
    }
}
package org.example;

public class Main {
    public static void main(String[] args) {
        Storage arr = new ArrayListStorage();
        Storage hm = new HashMapStorage();

        System.out.println("=== TESTING ArrayListStorage ===");
        testing(arr);

        System.out.println("\n=== TESTING HashMapStorage ===");
        testing(hm);
    }

    public static void testing(Storage storage) {
        Mahasiswa mhs1 = new Mahasiswa("Gian", "71210689", "Informatika");
        Mahasiswa mhs2 = new Mahasiswa("Yandex", "71210683", "Informatika");

        RegistorMahasiswa rm = new RegistorMahasiswa(storage);
        System.out.println("=== TES INSERT dan DUPLIKASI ===");
        rm.registerMahasiswaBaru(mhs1);
        rm.registerMahasiswaBaru(mhs2);
        rm.registerMahasiswaBaru(mhs2);

        System.out.println();
        rm.printInformasiMahasiswa(mhs1.getNim());
        System.out.println();
        rm.printInformasiMahasiswa(mhs2.getNim());

        System.out.println();
        System.out.println("=== TES UPDATE ===");
        rm.updateMahasiswa("71210683", "Yandi", "Informatika");
        rm.updateMahasiswa("71210690", "Yandi", "Informatika");

        System.out.println();
        rm.printInformasiMahasiswa(mhs1.getNim());
        System.out.println();
        rm.printInformasiMahasiswa(mhs2.getNim());

        System.out.println();
        System.out.println("=== TES DELETE ===");
        rm.deleteMahasiswa("71210683");
        rm.printInformasiMahasiswa("71210683");
    }
}

